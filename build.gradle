plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'net.ltgt.errorprone' version '1.1.1'
    id 'io.freefair.lombok' version '4.1.6'
    id 'maven-publish'
    id 'java'
}

group = 'xyz.shirokuro'
version = '0.2.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots' }
    maven { url 'https://maven.shirokuro.xyz/repos/releases/' }
}

dependencies {
    implementation 'xyz.shirokuro:commandutility:0.7.0'
    // Bukkit
    compileOnly 'org.bukkit:bukkit:1.12.2-R0.1-SNAPSHOT'
    // Guava
    implementation 'com.google.guava:guava:29.0-jre'
    // Bukkit for test
    testImplementation 'org.bukkit:bukkit:1.12.2-R0.1-SNAPSHOT'
    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    // ErrorProne
    errorprone 'com.google.errorprone:error_prone_core:2.+'
}

if (!JavaVersion.current().isJava9Compatible()) {
    dependencies {
        errorproneJavac 'com.google.errorprone:javac:9+181-r4173-1'
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withJavadocJar()
    withSourcesJar()
}

processResources {
    filter { String line ->
        line.replace '$version', version.toString()
    }
}

// Shadow settings

shadowJar {
    minimize()
    archiveFileName = "Worlds.jar"

    relocate 'com.google', 'xyz.shirokuro.worlds.libs.google'
    relocate 'org.checkerframework', 'xyz.shirokuro.worlds.libs.checkerframework'
    relocate 'xyz.shirokuro.commandutility', 'xyz.shirokuro.worlds.libs.commandutility'
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

// maven

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name
            from components.java
            pom {
                name = 'Worlds'
                description = 'The world manager for Bukkit servers'
                url = 'https://github.com/kuro46/Worlds'
            }
        }
    }
    repositories {
        maven {
            def publishRootDir = project.hasProperty("worlds.publish.rootdir")
                ? project.getProperty("worlds.publish.rootdir").toString()
                : buildDir.toString()
            def releasesRepoUrl = "$publishRootDir/repos/releases"
            def snapshotsRepoUrl = "$publishRootDir/repos/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
